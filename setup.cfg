[metadata]
name = asdf_astropy
author = The ASDF dev team
author_email = astropy.team@gmail.com
license = BSD 3-Clause
license_file = licenses/LICENSE.rst
url = http://docs.astropy.org/projects/asdf-astropy
description = Astropy Converters for ASDF
long_description = file: README.rst
long_description_content_type = text/x-rst
edit_on_github = False
github_project = astropy/asdf-astropy

[options]
zip_safe = True
packages = find:
python_requires = >=3.6
setup_requires = setuptools_scm
install_requires =
    #astropy @ git+https://github.com/astropy/astropy
    astropy
    asdf @ git+https://github.com/asdf-format/asdf
    numpy
    asdf-transform-schemas @ git+https://github.com/asdf-format/asdf-transform-schemas
    importlib_resources>=3;python_version<"3.9"
    packaging>=16.0

[options.entry_points]
asdf.extensions =
    asdf-astropy = asdf_astropy.integration:get_extensions
asdf.resource_mappings =
    asdf-astropy = asdf_astropy.integration:get_resource_mappings

[options.extras_require]
test =
    pytest-astropy
    coverage
docs =
    sphinx
    sphinx-astropy
    sphinx-automodapi
    sphinx-asdf

[options.package_data]
asdf_astropy.resources = manifests/*.yaml, schemas/*.yaml, schemas/**/*.yaml, schemas/**/**/*.yaml

[tool:pytest]
testpaths = "asdf_astropy" "docs"
astropy_header = true
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst

[coverage:run]
omit =
    asdf_astropy/_astropy_init*
    asdf_astropy/conftest.py
    asdf_astropy/*setup_package*
    asdf_astropy/tests/*
    asdf_astropy/*/tests/*
    asdf_astropy/extern/*
    asdf_astropy/version*
    */asdf_astropy/_astropy_init*
    */asdf_astropy/conftest.py
    */asdf_astropy/*setup_package*
    */asdf_astropy/tests/*
    */asdf_astropy/*/tests/*
    */asdf_astropy/extern/*
    */asdf_astropy/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_

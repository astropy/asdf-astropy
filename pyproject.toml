[project]
name = "asdf-astropy"
description = "ASDF serialization support for astropy"
readme = 'README.rst'
license-files = ['LICENSE.rst']
authors = [{ name = 'The Astropy Developers', email = 'astropy.team@gmail.com' }]
requires-python = '>=3.11'
classifiers = [
  'Development Status :: 5 - Production/Stable',
  'Programming Language :: Python',
  "Programming Language :: Python :: 3",
]
dynamic = [
  'version',
]
dependencies = [
  "asdf>=2.14.4",
  #"asdf-coordinates-schemas>=0.3",
  "asdf-coordinates-schemas @ git+https://github.com/asdf-format/asdf-coordinates-schemas",
  #"asdf-transform-schemas>=0.5",
  "asdf-transform-schemas @ git+https://github.com/asdf-format/asdf-transform-schemas",
  "asdf-standard>=1.1.0",
  "astropy>=5.2.0",
  "numpy>=1.25",
  "packaging>=19",
]
[project.optional-dependencies]
docs = [
  "docutils",
  "graphviz",
  "matplotlib",
  "sphinx",
  "sphinx-asdf",
  "sphinx-astropy",
  "sphinx-automodapi",
  "tomli",
]
test = [
  "coverage",
  "pytest-astropy",
  "pytest",
  "scipy",  # indirect requirement via astropy
]
[project.urls]
'documentation' = 'https://asdf-astropy.readthedocs.io/en/latest/'
'repository' = 'https://github.com/astropy/asdf-astropy'
'tracker' = 'https://github.com/astropy/asdf-astropy/issues'
[project.entry-points]
'asdf.extensions' = {asdf-astropy = 'asdf_astropy.integration:get_extensions'}
'asdf.resource_mappings' = {asdf-astropy = 'asdf_astropy.integration:get_resource_mappings'}

[build-system]
build-backend = 'setuptools.build_meta'
requires = [
  "setuptools>77",
  "setuptools_scm[toml]>=3.4",
]

[tool.setuptools.packages.find]
include = ["asdf_astropy*"]

[tool.setuptools.package-data]
"asdf_astropy.resources" = ["asdf_astropy/resources/**/**/*.yaml"]

[tool.setuptools_scm]
write_to = "asdf_astropy/_version.py"

[tool.black]
line-length = 120
force-exclude = '''
^/(
  (
      \.eggs
    | \.git
    | \.pytest_cache
    | \.tox
  )/
)
'''

[tool.ruff]
target-version = "py311"
line-length = 120
extend-exclude = ["docs/*"]

[tool.ruff.lint]
select = [
    "ERA",
    "YTT",
    "S",
    "BLE",
    "FBT",
    "B",
    "A",
    "COM",
    "C4",
    "CPY",
    "T10",
    "EM",
    "EXE",
    "INT",
    "ISC",
    "ICN",
    "LOG",
    "G",
    "INP",
    "PIE",
    "T20",
    "PYI",
    "PT",
    "Q",
    "RSE",
    "RET",
    "SLF",
    "SLOT",
    "TID",
    "PTH",
    "FLY",
    "I",
    "NPY",
    "N",
    "PERF",
    "E",
    "W",
    "DOC",
    "F",
    "PGH",
    "PL",
    "UP",
    "FURB",
    "RUF",
    "TRY",
]
extend-ignore = [
    # Individually ignored checks
    "SLF001", # private-member-access
    "FBT001", # boolean positional arguments in function definition
    "RUF012", # mutable class attributes should be annotated with typing.ClassVar
    "PTH123", # replace open with Path.open
    "B905", # zip with strict
    "UP038", # isinstance with | instead of ,
    "A005", # shadow builtin modules
]

[tool.ruff.lint.per-file-ignores]
"test_*.py" = ["S101"]
"asdf_astropy/testing/helpers.py" = ["S101"]
"scripts/generate_manifest.py" = ["S101", "SLOT000"]

[tool.isort]
profile = "black"
filter_files = true
line_length = 120

[tool.pytest.ini_options]
testpaths = ['asdf_astropy', 'docs']
astropy_header = true
doctest_plus = 'enabled'
text_file_format = 'rst'
filterwarnings = [
    'error',
    'ignore:numpy.ndarray size changed:RuntimeWarning',
]
addopts = '--color=yes --doctest-rst'
asdf_schema_root = 'asdf_astropy/resources/schemas'
asdf_schema_tests_enabled = true

[tool.coverage.run]
omit = [
    'asdf_astropy/conftest.py',
    'asdf_astropy/*setup_package*',
    'asdf_astropy/tests/*',
    'asdf_astropy/*/tests/*',
    'asdf_astropy/extern/*',
    'asdf_astropy/version*',
    '*/asdf_astropy/conftest.py',
    '*/asdf_astropy/*setup_package*',
    '*/asdf_astropy/tests/*',
    '*/asdf_astropy/*/tests/*',
    '*/asdf_astropy/extern/*',
    '*/asdf_astropy/version*',
]

[tool.coverage.report]
exclude_lines = [
    # Have to re-enable the standard pragma
    'pragma: no cover',
    # Don't complain about packages we have installed
    'except ImportError',
    # Don't complain if tests don't hit assertions
    'raise AssertionError',
    'raise NotImplementedError',
    # Don't complain about script hooks
    'def main\(.*\):',
    # Ignore branches that don't pertain to this version of Python
    'pragma: py{ignore_python_version}',
    # Don't complain about IPython completion helper
    'def _ipython_key_completions_',
]

[tool.codespell]
skip="*.pdf,*.fits,*.asdf,*.egg-info,.tox,build,./tags,.git,./docs/_build"

name: CI

on:
  push:
    branches:
      - master
    tags:
      - "*"
  pull_request:
    branches:
  schedule:
    # Run every Monday at 6am UTC
    - cron: '0 6 * * 1'

jobs:
  tox_pytest:
    name: ${{ matrix.name }} 
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include: 
          - name: Python 3.8 with code coverage
            python-version: "3.8"
            os: ubuntu-latest
            toxenv: py38-cov

          - name: Python 3.8, Development Dependencies
            python-version: "3.8"
            os: ubuntu-latest
            toxenv: py38-test-devdeps

          - name: Python 3.8, Numpy 1.17
            python-version: "3.8"
            os: ubuntu-latest
            toxenv: py38-test-numpy117

          - name: Python 3.8, Numpy 1.18
            python-version: "3.8"
            os: ubuntu-latest
            toxenv: py38-test-numpy118

          - name: Python 3.8, Numpy 1.19
            python-version: "3.8"
            os: ubuntu-latest
            toxenv: py38-test-numpy119

          - name: Code Style Checks
            python-version: "3.8"
            os: ubuntu-latest
            toxenv: codestyle

          - name: Python 3.7, MacOS
            python-version: "3.7"
            os: macos-latest
            toxenv: py37-test

          - name: Build Documents
            python-version: "3.8"
            os: ubuntu-latest
            toxenv: build_docs

          - name: Code Style Checks
            python-version: "3.8"
            os: ubuntu-latest
            toxenv: codestyle

          # Fails: asdf_astropy/converters/transform/tests/test_transform.py::test_deserialize_compound_user_inverse
          # Failes asdf_astropy/converters/transform/tests/test_transform.py: 528
          - name: Python 3.8 with Astropy LTS
            python-version: "3.8"
            os: ubuntu-latest
            toxenv: py38-astropylts

          - name: Bandit Checks
            python-version: "3.8"
            os: ubuntu-latest
            toxenv: bandit

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install tox
        run: |
          export SETUP_XVFB=True
          python -m pip install tox
      - name: Run tox
        run: tox -e ${{ matrix.toxenv }}
      - name: Upload Code Coverage
        if: ${{ contains(matrix.toxenv,'-cov') }}
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
